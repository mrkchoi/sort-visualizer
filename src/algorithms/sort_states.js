// sortStates = {
//   bubbleSort: [
//     [4, 8, 7, 2, 3, 9, 10, 5, 1, 6],
//     [4, 7, 8, 2, 3, 9, 10, 5, 1, 6],
//     [4, 7, 2, 8, 3, 9, 10, 5, 1, 6],
//     [4, 7, 2, 3, 8, 9, 10, 5, 1, 6],
//     [4, 7, 2, 3, 8, 9, 10, 1, 5, 6],
//     [4, 2, 7, 3, 8, 9, 10, 1, 5, 6],
//     [4, 2, 3, 7, 8, 9, 10, 1, 5, 6],
//     [4, 2, 3, 7, 8, 9, 1, 10, 5, 6],
//     [4, 2, 3, 7, 8, 9, 1, 5, 10, 6],
//     [4, 2, 3, 7, 8, 9, 1, 5, 6, 10],
//     [2, 4, 3, 7, 8, 9, 1, 5, 6, 10],
//     [2, 3, 4, 7, 8, 9, 1, 5, 6, 10],
//     [2, 3, 4, 7, 8, 1, 9, 5, 6, 10],
//     [2, 3, 4, 7, 8, 1, 5, 9, 6, 10],
//     [2, 3, 4, 7, 8, 1, 5, 6, 9, 10],
//     [2, 3, 4, 7, 1, 8, 5, 6, 9, 10],
//     [2, 3, 4, 7, 1, 5, 8, 6, 9, 10],
//     [2, 3, 4, 7, 1, 5, 6, 8, 9, 10],
//     [2, 3, 4, 1, 7, 5, 6, 8, 9, 10],
//     [2, 3, 4, 1, 5, 7, 6, 8, 9, 10],
//     [2, 3, 4, 1, 5, 6, 7, 8, 9, 10],
//     [2, 3, 1, 4, 5, 6, 7, 8, 9, 10],
//     [2, 1, 3, 4, 5, 6, 7, 8, 9, 10],
//     [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
//   ],
//   quickSort: [],
//   mergeSort: [],
//   insertionSort: [],
//   selectionSort: []
// };



// [4, 8, 7, 2, 3, 9, 10, 5, 1, 6],
// [8,7,2,3,4,9,10,5,1,6],
// [8,7,2,3,4,9,10,5,1,6],




// [2, 3, 1], [4], [8, 7, 9, 10, 5, 6],
// [1][2][3] [4] [5, 6, 7] [8] [9, 10]






// example of data shape (json)

[
  {
    "sorts": [
      {
        "sort": "bubble sort",
        "time": 10.4355523156,
        "input size": 100
      },
      {
        "sort": "quick sort",
        "time": 2.4355523156,
        "input size": 100
      }
    ],
    "input size": 100
  },
]

[
  {
    "sorts": [
      {
        "sort": "bubble sort",
        "time": 17.148396998643875,
        "inputSize": 5000
      },
      {
        "sort": "selection sort",
        "time": 10.055069983005524,
        "inputSize": 5000
      },
      {
        "sort": "insertion sort",
        "time": 15.673156976699829,
        "inputSize": 5000
      },
      {
        "sort": "radix sort",
        "time": 1.7403109967708588,
        "inputSize": 5000
      },
      {
        "sort": "heap sort",
        "time": 0.8763439953327179,
        "inputSize": 5000
      },
      {
        "sort": "quick sort",
        "time": 23.07947301864624,
        "inputSize": 5000
      },
      {
        "sort": "merge sort",
        "time": 0.48159298300743103,
        "inputSize": 5000
      },
      {
        "sort": "shell sort",
        "time": 69.4279719889164,
        "inputSize": 5000
      }
    ],
    "inputSize": 5000,
    "currentMaxTime": 69.4279719889164
  }
]

// bubble sort:     O(n^2)
// selection sort:  O(n^2)
// insertion sort:  O(n^2)
// radix sort:      O(n+k)
// heap sort:       O(n*log(n))
// quick sort:      O(n^2)
// merge sort:      O(n*log(n))
// shell sort:      O(n^2)